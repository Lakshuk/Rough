/* General Styles */
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f6f8;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/* Form Container */
.form-container {
  width: 90%;
  max-width: 450px;
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  padding: 20px;
  overflow: hidden;
  text-align: center;
  max-height: 85vh; /* Prevent overflow */
  overflow-y: auto; /* Add scrollbar if necessary */
}

/* Form Header */
.form-card h1 {
  font-size: 24px;
  margin-bottom: 20px;
  color: #333;
  font-weight: bold;
}

/* Form Groups */
.form-group {
  margin-bottom: 15px;
  text-align: left;
}

.form-group label {
  font-size: 14px;
  color: #555;
  margin-bottom: 5px;
  display: block;
}

.form-group input {
  width: 100%;
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-sizing: border-box;
  outline: none;
  transition: border-color 0.3s;
}

.form-group input:focus {
  border-color: #007bff;
}

/* Submit Button */
button {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  color: #ffffff;
  background-color: #007bff;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #0056b3;
}

/* Responsive Design */
@media (max-width: 480px) {
  .form-container {
    width: 95%;
    padding: 15px;
  }

  .form-group input {
    font-size: 14px;
    padding: 8px;
  }

  button {
    font-size: 14px;
    padding: 10px;
  }
}



//

/* General Styles */
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background: linear-gradient(120deg, #84fab0, #8fd3f4);
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/* Form Container */
.form-container {
  width: 90%;
  max-width: 400px;
  background: #ffffff;
  border-radius: 15px;
  padding: 20px 25px;
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
  text-align: center;
}

/* Form Header */
.form-card h1 {
  font-size: 26px;
  color: #2b2b2b;
  margin-bottom: 20px;
  font-weight: bold;
  background: linear-gradient(90deg, #fc466b, #3f5efb);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Form Groups */
.form-group {
  margin-bottom: 15px;
  text-align: left;
}

.form-group label {
  font-size: 14px;
  color: #333333;
  margin-bottom: 5px;
  display: block;
}

.form-group input {
  width: 100%;
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 10px;
  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.1);
  outline: none;
  transition: all 0.3s ease;
}

.form-group input:focus {
  border-color: #3f5efb;
  box-shadow: 0px 0px 5px rgba(63, 94, 251, 0.5);
}

/* Submit Button */
button {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  font-weight: bold;
  color: #ffffff;
  background: linear-gradient(90deg, #fc466b, #3f5efb);
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
}

button:hover {
  background: linear-gradient(90deg, #3f5efb, #fc466b);
  box-shadow: 0px 4px 10px rgba(63, 94, 251, 0.5);
}

/* Responsive Design */
@media (max-width: 480px) {
  .form-container {
    width: 95%;
    padding: 15px;
  }

  .form-group input {
    font-size: 14px;
    padding: 10px;
  }

  button {
    font-size: 14px;
    padding: 10px;
  }
}



//scroll bar

/* General Styles */
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f6f8;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/* Form Container */
.form-container {
  width: 90%;
  max-width: 450px;
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  padding: 20px;
  overflow: hidden;
  text-align: center;
  max-height: 85vh; /* Prevent overflow */
  overflow-y: auto; /* Add scrollbar if necessary */
}

/* Form Header */
.form-card h1 {
  font-size: 24px;
  margin-bottom: 20px;
  color: #333;
  font-weight: bold;
}

/* Form Groups */
.form-group {
  margin-bottom: 15px;
  text-align: left;
}

.form-group label {
  font-size: 14px;
  color: #555;
  margin-bottom: 5px;
  display: block;
}

.form-group input {
  width: 100%;
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-sizing: border-box;
  outline: none;
  transition: border-color 0.3s;
}

.form-group input:focus {
  border-color: #007bff;
}

/* Submit Button */
button {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  color: #ffffff;
  background-color: #007bff;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #0056b3;
}

/* Responsive Design */
@media (max-width: 480px) {
  .form-container {
    width: 95%;
    padding: 15px;
  }

  .form-group input {
    font-size: 14px;
    padding: 8px;
  }

  button {
    font-size: 14px;
    padding: 10px;
  }
}



//employee details 

import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

const EmployeeList = () => {
  const [employees, setEmployees] = useState([]); // State to store the employee list
  const navigate = useNavigate();

  useEffect(() => {
    // Fetching the data
    axios
      .get('http://localhost:8080/student/getAll') // Replace URL with your API endpoint
      .then((response) => setEmployees(response.data))
      .catch((error) => console.error('Error fetching employees:', error));
  }, []);

  // Handle card click (view employee details)
  const handleCardClick = (id) => {
    navigate(`/employee/${id}`);
  };

  // Handle add button click
  const handleAddEmployee = () => {
    navigate('/employees/add');
  };

  return (
    <div className="employee-list-container">
      <button className="add-employee-btn" onClick={handleAddEmployee}>
        Add Employee
      </button>
      <div className="employee-card-container">
        {employees.map((employee) => (
          <div
            key={employee.id}
            className="employee-card"
            onClick={() => handleCardClick(employee.id)}
          >
            <h3>{employee.name}</h3>
          </div>
        ))}
      </div>
    </div>
  );
};

export default EmployeeList;



//employee update 

import React from "react";
import { useNavigate } from "react-router-dom";
import "./EmployeeList.css"; // Add your CSS file if needed

const EmployeeList = ({ employees, onView }) => {
  const navigate = useNavigate();

  // Handle Add Button Click
  const handleAddEmployee = () => {
    navigate("/employees/add"); // Navigate to the Add Employee page
  };

  return (
    <div className="employee-list-container">
      {/* Title */}
      <h1 className="employee-list-title">Employee List</h1>

      {/* Add Button */}
      <div className="add-button-container">
        <button className="add-employee-btn" onClick={handleAddEmployee}>
          Add Employee
        </button>
      </div>

      {/* Employee Cards */}
      <div className="employee-cards">
        {employees.map((employee) => (
          <div
            key={employee.id}
            className="employee-card"
            onClick={() => onView(employee)}
          >
            <h2>{employee.name}</h2>
            <p>{employee.email}</p>
            <p>{employee.phone}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default EmployeeList;



//new update 

import React, { useState } from "react";
import "./EmployeeForm.css";

const EmployeeForm = () => {
  const [userDetail, setUserDetail] = useState({
    name: "",
    number: "",
    email: "",
    password: "",
    country: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserDetail({ ...userDetail, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Form Submitted: ", userDetail);
  };

  return (
    <div className="new-form-container">
      <div className="new-form-card">
        <h2 className="new-form-title">Add Employee</h2>
        <form onSubmit={handleSubmit}>
          {/* Name Field */}
          <div className="new-form-group">
            <label htmlFor="name">Name</label>
            <input
              type="text"
              name="name"
              value={userDetail.name}
              onChange={handleChange}
              placeholder="Enter full name"
            />
          </div>

          {/* Number Field */}
          <div className="new-form-group">
            <label htmlFor="number">Phone Number</label>
            <input
              type="text"
              name="number"
              value={userDetail.number}
              onChange={handleChange}
              placeholder="Enter phone number"
            />
          </div>

          {/* Email Field */}
          <div className="new-form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              name="email"
              value={userDetail.email}
              onChange={handleChange}
              placeholder="Enter email address"
            />
          </div>

          {/* Password Field */}
          <div className="new-form-group">
            <label htmlFor="password">Password</label>
            <input
              type="password"
              name="password"
              value={userDetail.password}
              onChange={handleChange}
              placeholder="Enter password"
            />
          </div>

          {/* Country Field */}
          <div className="new-form-group">
            <label htmlFor="country">Country</label>
            <input
              type="text"
              name="country"
              value={userDetail.country}
              onChange={handleChange}
              placeholder="Enter your country"
            />
          </div>

          {/* Submit Button */}
          <button type="submit" className="new-submit-btn">
            Add Employee
          </button>
        </form>
      </div>
    </div>
  );
};

export default EmployeeForm;
