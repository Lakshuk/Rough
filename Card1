import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

const EmployeeList = () => {
  const [employees, setEmployees] = useState([]);
  const navigate = useNavigate();

  // Fetch employee list from the backend
  useEffect(() => {
    fetch("http://localhost:8080/getAll")
      .then((response) => response.json())
      .then((data) => setEmployees(data))
      .catch((error) => console.error("Error fetching employees:", error));
  }, []);

  const handleCardClick = (id) => {
    navigate(`/employee/${id}`);
  };

  return (
    <div style={{ display: "flex", flexWrap: "wrap", gap: "20px", padding: "20px" }}>
      {employees.map((employee) => (
        <div
          key={employee.id}
          style={{
            border: "1px solid #ccc",
            borderRadius: "8px",
            padding: "16px",
            width: "200px",
            textAlign: "center",
            boxShadow: "0 4px 8px rgba(0, 0, 0, 0.2)",
            cursor: "pointer",
          }}
          onClick={() => handleCardClick(employee.id)}
        >
          <h3>{employee.name}</h3>
        </div>
      ))}
    </div>
  );
};

export default EmployeeList;



//employee detail file

import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";

const EmployeeDetails = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [employee, setEmployee] = useState(null);

  // Fetch employee details by ID from the backend
  useEffect(() => {
    fetch(`http://localhost:8080/getById/${id}`)
      .then((response) => response.json())
      .then((data) => setEmployee(data))
      .catch((error) => console.error("Error fetching employee details:", error));
  }, [id]);

  const handleDelete = () => {
    fetch(`http://localhost:8080/delete/${id}`, {
      method: "DELETE",
    })
      .then((response) => {
        if (response.ok) {
          alert("Employee deleted successfully");
          navigate("/");
        } else {
          alert("Failed to delete employee");
        }
      })
      .catch((error) => console.error("Error deleting employee:", error));
  };

  const handleEdit = () => {
    alert("Edit functionality not implemented yet");
    // Add your edit functionality here
  };

  if (!employee) {
    return <p>Loading...</p>;
  }

  return (
    <div style={{ textAlign: "center", padding: "20px" }}>
      <h1>{employee.name}</h1>
      <p><strong>Email:</strong> {employee.email}</p>
      <p><strong>Number:</strong> {employee.number}</p>
      <p><strong>Country:</strong> {employee.country}</p>
      <div style={{ marginTop: "20px" }}>
        <button style={{ marginRight: "10px" }} onClick={handleEdit}>
          Edit
        </button>
        <button style={{ marginRight: "10px" }} onClick={handleDelete}>
          Delete
        </button>
        <button onClick={() => navigate("/")}>Home</button>
      </div>
    </div>
  );
};

export default EmployeeDetails;





//updated Employee details 


import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";

const EmployeeDetails = () => {
  const { id } = useParams(); // Extract employee ID from URL
  const navigate = useNavigate();
  const [employee, setEmployee] = useState(null); // Employee details state
  const [isEditing, setIsEditing] = useState(false); // Toggle edit mode
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    number: "",
    country: "",
  });

  // Fetch employee details by ID
  useEffect(() => {
    fetch(`http://localhost:8080/getById/${id}`)
      .then((response) => response.json())
      .then((data) => {
        setEmployee(data);
        setFormData(data); // Pre-fill form data for editing
      })
      .catch((error) => console.error("Error fetching employee details:", error));
  }, [id]);

  // Handle delete operation
  const handleDelete = () => {
    const confirmDelete = window.confirm("Are you sure you want to delete this employee?");
    if (confirmDelete) {
      fetch(`http://localhost:8080/delete/${id}`, {
        method: "DELETE",
      })
        .then((response) => {
          if (response.ok) {
            alert("Employee deleted successfully!");
            navigate("/"); // Redirect to the main page
          } else {
            alert("Failed to delete the employee.");
          }
        })
        .catch((error) => console.error("Error deleting employee:", error));
    }
  };

  // Handle input changes in the form
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // Handle update operation
  const handleUpdate = (e) => {
    e.preventDefault();
    fetch(`http://localhost:8080/update`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(formData),
    })
      .then((response) => {
        if (response.ok) {
          alert("Employee updated successfully!");
          setEmployee(formData); // Update the displayed details
          setIsEditing(false); // Exit edit mode
        } else {
          alert("Failed to update employee.");
        }
      })
      .catch((error) => console.error("Error updating employee:", error));
  };

  // Loading state or employee not found
  if (!employee) {
    return <p>Loading...</p>;
  }

  return (
    <div style={{ textAlign: "center", padding: "20px" }}>
      {!isEditing ? (
        <>
          <h1>{employee.name}</h1>
          <p><strong>Email:</strong> {employee.email}</p>
          <p><strong>Number:</strong> {employee.number}</p>
          <p><strong>Country:</strong> {employee.country}</p>
          <div style={{ marginTop: "20px" }}>
            <button style={{ marginRight: "10px" }} onClick={handleDelete}>
              Delete
            </button>
            <button style={{ marginRight: "10px" }} onClick={() => setIsEditing(true)}>
              Edit
            </button>
            <button onClick={() => navigate("/")}>Home</button>
          </div>
        </>
      ) : (
        <form onSubmit={handleUpdate} style={{ display: "inline-block", textAlign: "left" }}>
          <h2>Edit Employee</h2>
          <label>
            Name:
            <input
              type="text"
              name="name"
              value={formData.name}
              onChange={handleInputChange}
              required
            />
          </label>
          <br />
          <label>
            Email:
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              required
            />
          </label>
          <br />
          <label>
            Number:
            <input
              type="text"
              name="number"
              value={formData.number}
              onChange={handleInputChange}
              required
            />
          </label>
          <br />
          <label>
            Country:
            <input
              type="text"
              name="country"
              value={formData.country}
              onChange={handleInputChange}
              required
            />
          </label>
          <br />
          <div style={{ marginTop: "10px" }}>
            <button type="submit" style={{ marginRight: "10px" }}>
              Save
            </button>
            <button onClick={() => setIsEditing(false)}>Cancel</button>
          </div>
        </form>
      )}
    </div>
  );
};

export default EmployeeDetails;




//css design 

import React, { useState } from "react";

const EmployeeForm = () => {
  const [userDetail, setUserDetail] = useState({
    name: "",
    number: "",
    email: "",
    password: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserDetail({ ...userDetail, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Form Submitted: ", userDetail);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-100 via-blue-300 to-blue-500">
      <div className="bg-white shadow-lg rounded-lg p-8 w-full max-w-lg">
        <h2 className="text-3xl font-bold text-center text-gray-800 mb-6">
          Employee Details
        </h2>
        <form onSubmit={handleSubmit}>
          {/* Name Field */}
          <div className="mb-4">
            <label
              htmlFor="name"
              className="block text-sm font-medium text-gray-600 mb-1"
            >
              Name
            </label>
            <input
              type="text"
              name="name"
              value={userDetail.name}
              onChange={handleChange}
              placeholder="Enter your name"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
            />
          </div>

          {/* Number Field */}
          <div className="mb-4">
            <label
              htmlFor="number"
              className="block text-sm font-medium text-gray-600 mb-1"
            >
              Number
            </label>
            <input
              type="text"
              name="number"
              value={userDetail.number}
              onChange={handleChange}
              placeholder="Enter your phone number"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
            />
          </div>

          {/* Email Field */}
          <div className="mb-4">
            <label
              htmlFor="email"
              className="block text-sm font-medium text-gray-600 mb-1"
            >
              Email
            </label>
            <input
              type="email"
              name="email"
              value={userDetail.email}
              onChange={handleChange}
              placeholder="Enter your email"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
            />
          </div>

          {/* Password Field */}
          <div className="mb-6">
            <label
              htmlFor="password"
              className="block text-sm font-medium text-gray-600 mb-1"
            >
              Password
            </label>
            <input
              type="password"
              name="password"
              value={userDetail.password}
              onChange={handleChange}
              placeholder="Enter your password"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
            />
          </div>

          {/* Submit Button */}
          <button
            type="submit"
            className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg font-semibold hover:bg-blue-600 transition duration-200"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
  );
};

export default EmployeeForm;
